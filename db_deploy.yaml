apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: mbarbhuidb
  name: mbarbhuidb
  namespace: mbarbhui-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mbarbhuidb
  strategy: {}
  template:  #pod template
    metadata:
      creationTimestamp: null
      labels:
        app: mbarbhuidb
    spec:
      volumes: # to create volume
      - name: mbarbhuidbvol
        hostPath: # pod wil take space from minion node(wherver scheduled)
          path: /data/mbarbhuidb
          type: DirectoryOrCreate
      containers:
      - image: mysql:5.7
        name: mysql
        ports:
        - containerPort: 3306
        envFrom: # to call environment variable from config map
        - configMapRef:
            name: mbarbhuidb-config # name of configMap
        env: # calling other env from secrets
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mbarbhuidb-sec
              key: db_pass
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mbarbhuidb-sec
              key: root_pass
        resources: {}
        volumeMounts: # to mount on the volume created above
        - name: mbarbhuidbvol
          mountPath: /var/lib/mysql
status: {}
